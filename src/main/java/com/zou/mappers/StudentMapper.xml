<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zou.mappers.StudentMapper">

    <resultMap id="StudentResult" type="Student">

        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="age" column="age"/>


        <!--
        对象级联的方式实现一对一关系
        <result property="address.id" column="addressId"/>
        <result property="address.provience" column="provience"/>
        <result property="address.city" column="city"/>
        -->

        <!--

          第二种方式  也不是最优的
        <association property="address" resultMap="AddressResult"></association>

        -->


        <association property="address" column="id" select="com.zou.mappers.AddressMapper.findById"></association>

        <association property="grade" column="gradeId" select="com.zou.mappers.GradesMapper.findById"></association>

    </resultMap>


    <resultMap id="Address" type="AddressResult">

        <result property="id" column="id"/>
        <result property="provience" column="id"/>
        <result property="city" column="city"/>

    </resultMap>


    <select id="findByGradeId" resultMap="StudentResult" parameterType="Integer">

        SELECT * FROM t_student WHERE gradeId=#{gradeId}
    </select>


    <select id="findStudentWithAddress" resultMap="StudentResult" parameterType="Integer">

        SELECT * FROM t_student t1, aaddress t2 WHERE t1.addressId = t2.id and t1.id=#{id}

    </select>


    <insert id="add" parameterMap="Student">
        INSERT INTO t_student VALUES (NULL ,#{name},#{age})
    </insert>


    <update id="update" parameterType="Student">
        UPDATE t_student SET name=#{name},age=#{age} where id = #{id}
    </update>


    <delete id="delete" parameterType="Integer">
        DELETE FROM t_student WHERE id=#{id}
    </delete>

    <select id="findById" parameterType="Integer" resultMap="Student">

        SELECT * FROM t_student WHERE id=#{id}
    </select>

    <select id="findAll" resultMap="StudentResult">

        SELECT * FROM t_student
    </select>


    <!-- 复杂sql    if 语句 -->
    <select id="searchStudents" parameterType="Map" resultMap="StudentResult">

        SELECT * FROM t_student WHERE gradeId=#{gradeId}
        <if test="name!=null">
            AND name LIKE #{name}
        </if>
        <if test="age != null">
            and age=#{age}
        </if>

    </select>

    <!-- 复杂sql   when语句 -->


    <select id="searchStudents2" parameterType="Map" resultMap="StudentResult">

        SELECT * FROM t_student
        <choose>

            <when test="searchBy=='gradeId'">
                WHERE gradeId=#{gradeId}
            </when>

            <when test="searchBy=='name'">
                WHERE name LIKE #{name}
            </when>

            <otherwise>
                WHERE age=#{age}
            </otherwise>

        </choose>

    </select>


    <!--   where  语句  -->


    <select id="searchStudents3" parameterType="Map" resultMap="StudentResult">

        SELECT * FROM t_student

        <where>

            SELECT * FROM t_student
            <where>

                <if test="gradeId != null">
                    gradeId = #{gradeId}
                </if>

                <if test="name != null">
                    and name LIKE #{name}
                </if>

                <if test="age != null">
                    AND age=#{age}
                </if>


            </where>


        </where>


    </select>









</mapper>












































